"""Initial schema

Revision ID: fb9e66e7977e
Revises: 
Create Date: 2025-05-26 18:30:21.645766

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fb9e66e7977e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cultural_context_markers',
    sa.Column('marker_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('context_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('context_category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('detection_pattern', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('risk_interpretation', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('applicable_regions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('marker_id', name=op.f('cultural_context_markers_pkey'))
    )
    op.create_table('risk_scenarios',
    sa.Column('scenario_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('scenario_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('scenario_category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('difficulty_level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('scenario_description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('scenario_script', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expected_reactions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('indian_context_relevance', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('cultural_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('is_system_default', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.user_id'], name='risk_scenarios_created_by_fkey'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.organization_id'], name='risk_scenarios_organization_id_fkey'),
    sa.PrimaryKeyConstraint('scenario_id', name='risk_scenarios_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('alembic_version',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name=op.f('alembic_version_pkc'))
    )
    op.create_table('emotional_markers',
    sa.Column('marker_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('analysis_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('emotion_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('intensity', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=False),
    sa.Column('start_time_offset', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('end_time_offset', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('duration_ms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_peak', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('confidence_score', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=False),
    sa.Column('frequency_features', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('spectral_features', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('prosodic_features', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('cultural_context_factors', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('regional_adjustment_applied', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['voice_analyses.analysis_id'], name=op.f('emotional_markers_analysis_id_fkey')),
    sa.PrimaryKeyConstraint('marker_id', name=op.f('emotional_markers_pkey'))
    )
    op.create_table('regional_calibrations',
    sa.Column('calibration_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('region', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('language', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('emotion_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('adjustment_factor', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=False),
    sa.Column('confidence_score', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=False),
    sa.Column('research_basis', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('calibration_id', name=op.f('regional_calibrations_pkey'))
    )
    op.create_table('clients',
    sa.Column('client_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('primary_advisor_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('client_code', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('pan_number', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('aadhar_number', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('pin_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('mobile', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('occupation', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('annual_income', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('income_bracket', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('marital_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('family_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('education_level', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('investment_experience', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('kyc_verified', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.organization_id'], name='clients_organization_id_fkey'),
    sa.ForeignKeyConstraint(['primary_advisor_id'], ['users.user_id'], name='clients_primary_advisor_id_fkey'),
    sa.PrimaryKeyConstraint('client_id', name='clients_pkey'),
    sa.UniqueConstraint('client_code', name='clients_client_code_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('client_family_members',
    sa.Column('member_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('relation', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('dependent', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.client_id'], name=op.f('client_family_members_client_id_fkey')),
    sa.PrimaryKeyConstraint('member_id', name=op.f('client_family_members_pkey'))
    )
    op.create_table('product_recommendations',
    sa.Column('recommendation_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('allocation_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('allocation_percentage', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=False),
    sa.Column('recommendation_rationale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('confidence_score', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=False),
    sa.Column('is_suitability_verified', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('suitability_verified_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('verification_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['allocation_id'], ['risk_profile_asset_allocations.allocation_id'], name=op.f('product_recommendations_allocation_id_fkey')),
    sa.ForeignKeyConstraint(['created_by'], ['users.user_id'], name=op.f('product_recommendations_created_by_fkey')),
    sa.ForeignKeyConstraint(['product_id'], ['investment_products.product_id'], name=op.f('product_recommendations_product_id_fkey')),
    sa.ForeignKeyConstraint(['suitability_verified_by'], ['users.user_id'], name=op.f('product_recommendations_suitability_verified_by_fkey')),
    sa.PrimaryKeyConstraint('recommendation_id', name=op.f('product_recommendations_pkey'))
    )
    op.create_table('branches',
    sa.Column('branch_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('branch_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('branch_code', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('pin_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('manager_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.organization_id'], name='branches_organization_id_fkey'),
    sa.PrimaryKeyConstraint('branch_id', name='branches_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('branch_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('designation', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('arn_number', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sebi_registration', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password_salt', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.branch_id'], name='users_branch_id_fkey'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.organization_id'], name='users_organization_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('risk_dimension_scores',
    sa.Column('score_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('profile_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('dimension_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('dimension_score', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=False),
    sa.Column('confidence_score', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=False),
    sa.Column('percentile_rank', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('contributing_markers', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('contributing_scenarios', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('score_explanation', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('advisor_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dimension_id'], ['risk_profile_dimensions.dimension_id'], name=op.f('risk_dimension_scores_dimension_id_fkey')),
    sa.ForeignKeyConstraint(['profile_id'], ['risk_profiles.profile_id'], name=op.f('risk_dimension_scores_profile_id_fkey')),
    sa.PrimaryKeyConstraint('score_id', name=op.f('risk_dimension_scores_pkey'))
    )
    op.create_table('investment_products',
    sa.Column('product_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('product_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('product_code', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('asset_class_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('product_category', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sub_category', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('issuer', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('risk_rating', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('min_investment', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('liquidity_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lock_in_period', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('exit_load', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('expense_ratio', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('historical_returns_1y', sa.NUMERIC(precision=6, scale=2), autoincrement=False, nullable=True),
    sa.Column('historical_returns_3y', sa.NUMERIC(precision=6, scale=2), autoincrement=False, nullable=True),
    sa.Column('historical_returns_5y', sa.NUMERIC(precision=6, scale=2), autoincrement=False, nullable=True),
    sa.Column('tax_category', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sebi_category', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['asset_class_id'], ['asset_classes.asset_class_id'], name=op.f('investment_products_asset_class_id_fkey')),
    sa.PrimaryKeyConstraint('product_id', name=op.f('investment_products_pkey'))
    )
    op.create_table('client_goals',
    sa.Column('goal_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('goal_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('goal_category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('target_amount', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('current_value', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('target_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('priority', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('inflation_rate', sa.NUMERIC(precision=5, scale=2), server_default=sa.text('6.00'), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.client_id'], name='client_goals_client_id_fkey'),
    sa.PrimaryKeyConstraint('goal_id', name='client_goals_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('asset_classes',
    sa.Column('asset_class_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('asset_class_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('asset_class_category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('risk_level', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('liquidity_level', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('time_horizon_min', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('time_horizon_optimal', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('expected_return_min', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('expected_return_max', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('inflation_protection_level', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tax_efficiency_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('indian_market_relevance', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('asset_class_id', name='asset_classes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_permissions',
    sa.Column('permission_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('permission_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('granted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('granted_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['granted_by'], ['users.user_id'], name=op.f('user_permissions_granted_by_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('user_permissions_user_id_fkey')),
    sa.PrimaryKeyConstraint('permission_id', name=op.f('user_permissions_pkey'))
    )
    op.create_table('recording_sessions',
    sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('advisor_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('session_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('session_duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('recording_purpose', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('recording_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('recording_format', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('recording_quality', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('file_size_kb', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('language_primary', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('language_secondary', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('noise_level', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('consent_obtained', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('consent_document_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('session_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['advisor_id'], ['users.user_id'], name='recording_sessions_advisor_id_fkey'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.client_id'], name='recording_sessions_client_id_fkey'),
    sa.PrimaryKeyConstraint('session_id', name='recording_sessions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('emotion_baselines',
    sa.Column('baseline_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('emotion_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('baseline_value', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=False),
    sa.Column('confidence_score', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.client_id'], name=op.f('emotion_baselines_client_id_fkey')),
    sa.ForeignKeyConstraint(['session_id'], ['recording_sessions.session_id'], name=op.f('emotion_baselines_session_id_fkey')),
    sa.PrimaryKeyConstraint('baseline_id', name=op.f('emotion_baselines_pkey'))
    )
    op.create_table('scenario_responses',
    sa.Column('response_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('scenario_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('start_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('end_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('response_audio_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('transcript', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('advisor_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['scenario_id'], ['risk_scenarios.scenario_id'], name='scenario_responses_scenario_id_fkey'),
    sa.ForeignKeyConstraint(['session_id'], ['recording_sessions.session_id'], name='scenario_responses_session_id_fkey'),
    sa.PrimaryKeyConstraint('response_id', name='scenario_responses_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('regulatory_compliance_templates',
    sa.Column('template_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('template_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('regulatory_body', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('regulation_reference', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('template_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('required_data_points', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('last_updated', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('template_id', name=op.f('regulatory_compliance_templates_pkey'))
    )
    op.create_table('model_feedback',
    sa.Column('feedback_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('version_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('profile_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('feedback_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('feedback_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('feedback_details', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('submitted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['risk_profiles.profile_id'], name=op.f('model_feedback_profile_id_fkey')),
    sa.ForeignKeyConstraint(['submitted_by'], ['users.user_id'], name=op.f('model_feedback_submitted_by_fkey')),
    sa.ForeignKeyConstraint(['version_id'], ['model_versions.version_id'], name=op.f('model_feedback_version_id_fkey')),
    sa.PrimaryKeyConstraint('feedback_id', name=op.f('model_feedback_pkey'))
    )
    op.create_table('risk_profile_dimensions',
    sa.Column('dimension_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('dimension_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('dimension_category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('scoring_algorithm', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('organization_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.user_id'], name=op.f('risk_profile_dimensions_created_by_fkey')),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.organization_id'], name=op.f('risk_profile_dimensions_organization_id_fkey')),
    sa.PrimaryKeyConstraint('dimension_id', name=op.f('risk_profile_dimensions_pkey'))
    )
    op.create_table('model_versions',
    sa.Column('version_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('model_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('model_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('version_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('release_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('model_file_path', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('model_architecture', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('training_dataset_details', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('validation_metrics', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('production_metrics', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.user_id'], name=op.f('model_versions_created_by_fkey')),
    sa.PrimaryKeyConstraint('version_id', name=op.f('model_versions_pkey'))
    )
    op.create_table('risk_profile_comparisons',
    sa.Column('comparison_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('primary_profile_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('comparison_profile_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('comparison_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('significant_changes', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('change_causes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('recommendations', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.client_id'], name=op.f('risk_profile_comparisons_client_id_fkey')),
    sa.ForeignKeyConstraint(['comparison_profile_id'], ['risk_profiles.profile_id'], name=op.f('risk_profile_comparisons_comparison_profile_id_fkey')),
    sa.ForeignKeyConstraint(['created_by'], ['users.user_id'], name=op.f('risk_profile_comparisons_created_by_fkey')),
    sa.ForeignKeyConstraint(['primary_profile_id'], ['risk_profiles.profile_id'], name=op.f('risk_profile_comparisons_primary_profile_id_fkey')),
    sa.PrimaryKeyConstraint('comparison_id', name=op.f('risk_profile_comparisons_pkey'))
    )
    op.create_table('audit_logs',
    sa.Column('log_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('action_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('action_details', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('audit_logs_user_id_fkey')),
    sa.PrimaryKeyConstraint('log_id', name=op.f('audit_logs_pkey'))
    )
    op.create_table('client_financial_assets',
    sa.Column('asset_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('asset_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('asset_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('institution', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('current_value', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=False),
    sa.Column('acquisition_value', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('acquisition_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('maturity_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('annual_return', sa.NUMERIC(precision=6, scale=2), autoincrement=False, nullable=True),
    sa.Column('liquidity_rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('associated_goal_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['associated_goal_id'], ['client_goals.goal_id'], name=op.f('client_financial_assets_associated_goal_id_fkey')),
    sa.ForeignKeyConstraint(['client_id'], ['clients.client_id'], name=op.f('client_financial_assets_client_id_fkey')),
    sa.PrimaryKeyConstraint('asset_id', name=op.f('client_financial_assets_pkey'))
    )
    op.create_table('asset_allocation_details',
    sa.Column('detail_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('allocation_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('asset_class_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('allocation_percentage', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=False),
    sa.Column('allocation_rationale', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('risk_contribution_percentage', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('return_contribution_percentage', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['allocation_id'], ['risk_profile_asset_allocations.allocation_id'], name=op.f('asset_allocation_details_allocation_id_fkey')),
    sa.ForeignKeyConstraint(['asset_class_id'], ['asset_classes.asset_class_id'], name=op.f('asset_allocation_details_asset_class_id_fkey')),
    sa.PrimaryKeyConstraint('detail_id', name=op.f('asset_allocation_details_pkey'))
    )
    op.create_table('organizations',
    sa.Column('organization_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('organization_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('organization_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('registration_number', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('pin_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('organization_id', name='organizations_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('risk_profiles',
    sa.Column('profile_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('profile_date', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('overall_risk_score', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=False),
    sa.Column('risk_category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('questionnaire_score', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=True),
    sa.Column('voice_analysis_score', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=False),
    sa.Column('confidence_level', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=False),
    sa.Column('consistency_score', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=True),
    sa.Column('education_needs_identified', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('behavioral_biases_detected', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('approved_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('approval_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('supersedes_profile_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('review_due_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.user_id'], name='risk_profiles_approved_by_fkey'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.client_id'], name='risk_profiles_client_id_fkey'),
    sa.ForeignKeyConstraint(['created_by'], ['users.user_id'], name='risk_profiles_created_by_fkey'),
    sa.ForeignKeyConstraint(['session_id'], ['recording_sessions.session_id'], name='risk_profiles_session_id_fkey'),
    sa.ForeignKeyConstraint(['supersedes_profile_id'], ['risk_profiles.profile_id'], name='risk_profiles_supersedes_profile_id_fkey'),
    sa.PrimaryKeyConstraint('profile_id', name='risk_profiles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('voice_analyses',
    sa.Column('analysis_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('response_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('analysis_version', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('analysis_timestamp', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('processing_time_ms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('confidence_score', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=True),
    sa.Column('voice_quality_score', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=True),
    sa.Column('background_noise_level', sa.NUMERIC(precision=5, scale=4), autoincrement=False, nullable=True),
    sa.Column('analysis_status', sa.VARCHAR(length=20), server_default=sa.text("'Completed'::character varying"), autoincrement=False, nullable=True),
    sa.Column('error_details', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('raw_analysis_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['response_id'], ['scenario_responses.response_id'], name=op.f('voice_analyses_response_id_fkey')),
    sa.PrimaryKeyConstraint('analysis_id', name=op.f('voice_analyses_pkey'))
    )
    op.create_table('risk_profile_asset_allocations',
    sa.Column('allocation_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('profile_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('allocation_date', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('is_approved', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('approved_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('approval_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.user_id'], name=op.f('risk_profile_asset_allocations_approved_by_fkey')),
    sa.ForeignKeyConstraint(['created_by'], ['users.user_id'], name=op.f('risk_profile_asset_allocations_created_by_fkey')),
    sa.ForeignKeyConstraint(['profile_id'], ['risk_profiles.profile_id'], name=op.f('risk_profile_asset_allocations_profile_id_fkey')),
    sa.PrimaryKeyConstraint('allocation_id', name=op.f('risk_profile_asset_allocations_pkey'))
    )
    # ### end Alembic commands ###

def downgrade() -> None:
    """downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('risk_profile_asset_allocations')
    op.drop_table('voice_analyses')
    op.drop_table('risk_profiles')
    op.drop_table('organizations')
    op.drop_table('asset_allocation_details')
    op.drop_table('client_financial_assets')
    op.drop_table('audit_logs')
    op.drop_table('risk_profile_comparisons')
    op.drop_table('model_versions')
    op.drop_table('risk_profile_dimensions')
    op.drop_table('model_feedback')
    op.drop_table('regulatory_compliance_templates')
    op.drop_table('scenario_responses')
    op.drop_table('emotion_baselines')
    op.drop_table('recording_sessions')
    op.drop_table('user_permissions')
    op.drop_table('asset_classes')
    op.drop_table('client_goals')
    op.drop_table('investment_products')
    op.drop_table('risk_dimension_scores')
    op.drop_table('users')
    op.drop_table('branches')
    op.drop_table('product_recommendations')
    op.drop_table('client_family_members')
    op.drop_table('clients')
    op.drop_table('regional_calibrations')
    op.drop_table('emotional_markers')
    op.drop_table('alembic_version')
    op.drop_table('risk_scenarios')
    op.drop_table('cultural_context_markers')
    # ### end Alembic commands ###